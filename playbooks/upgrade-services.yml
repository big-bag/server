---
- name: include a play to define start delay for 1password services
  ansible.builtin.import_playbook: 1password-delay.yml

- name: upgrade services
  hosts: localhost
  become: false
  gather_facts: false
  tasks:
    # ------------------- github repositories ------------------- #

    - name: find latest tag (1/2)
      ansible.builtin.shell: |
        git ls-remote --tags --exit-code --sort=-version:refname \
          https://github.com/{{ item.owner }}/{{ item.repo }}.git {{ item.pattern }} |
            head -n 1 |
            sed -E 's|.*refs/tags/(.+)|\1|'
      loop:
        - {
            owner: nginxinc,
            repo: nginx-prometheus-exporter,
            pattern: 'v[0-9]*.[0-9]*.[0-9]*'
          }
        - {
            owner: novnc,
            repo: websockify,
            pattern: 'v[0-9]*.[0-9]*.[0-9]*'
          }
      register: tag_version
      changed_when: false

    - name: find latest tag (2/2)
      ansible.builtin.set_fact:
        nginx_prometheus_exporter_tag: "{{ tag_version.results.0.stdout | replace('v', '') | replace('^{}', '') }}"
        websockify_tag: "{{ tag_version.results.1.stdout | replace('v', '') | replace('^{}', '') }}"

    - name: find commit id
      ansible.builtin.shell: |
        git ls-remote --heads --tags --exit-code \
          https://github.com/{{ item.owner }}/{{ item.repo }}.git {{ item.pattern }} |
            awk '{print $1}'
      loop:
        - {
            owner: Mic92,
            repo: sops-nix,
            pattern: refs/heads/master
          }
        - {
            owner: novnc,
            repo: websockify,
            pattern: 'refs/tags/{{ tag_version.results.1.stdout }}'
          }
        - {
            owner: eyeos,
            repo: spice-web-client,
            pattern: refs/heads/master
          }
      register: commit_id
      changed_when: false

    - name: find commit hash (1/2)
      ansible.builtin.command: |
        nix \
          --extra-experimental-features nix-command \
          shell -f '<nixpkgs>' nix-prefetch-github -c nix-prefetch-github \
          --json --rev {{ item.commit_id }} {{ item.owner }} {{ item.repo }}
      loop:
        - {
            owner: Mic92,
            repo: sops-nix,
            commit_id: '{{ commit_id.results.0.stdout }}'
          }
        - {
            owner: novnc,
            repo: websockify,
            commit_id: '{{ commit_id.results.1.stdout }}'
          }
        - {
            owner: eyeos,
            repo: spice-web-client,
            commit_id: '{{ commit_id.results.2.stdout }}'
          }
      register: commit_hash_json
      delegate_to: server
      changed_when: false
      become: false

    - name: find commit hash (2/2)
      ansible.builtin.set_fact:
        sops_nix_commit_hash: "{{ commit_hash_json.results.0.stdout | from_json | community.general.json_query('hash') | regex_replace('^sha256-(.*)$', '\\1') }}"
        websockify_commit_hash: "{{ commit_hash_json.results.1.stdout | from_json | community.general.json_query('hash') }}"
        spice_web_client_commit_hash: "{{ commit_hash_json.results.2.stdout | from_json | community.general.json_query('hash') }}"

    # ------------------- nginx-prometheus-exporter ------------------- #

    - name: find release hash | nginx-prometheus-exporter (1/2)
      ansible.builtin.command: |
        nix-prefetch-url \
          https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ nginx_prometheus_exporter_tag }}/nginx-prometheus-exporter_{{ nginx_prometheus_exporter_tag }}_linux_amd64.tar.gz \
          --type sha256
      register: nginx_prometheus_exporter_release_hash_sha256
      delegate_to: server
      changed_when: false
      become: false

    - name: find release hash | nginx-prometheus-exporter (2/2)
      ansible.builtin.command: |
        nix \
          --extra-experimental-features nix-command \
          hash to-sri --type sha256 {{ nginx_prometheus_exporter_release_hash_sha256.stdout }}
      register: nginx_prometheus_exporter_release_hash
      delegate_to: server
      changed_when: false
      become: false

    # ------------------- docker images ------------------- #

    - name: find digest of latest docker image
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.name == "latest") |
              .images[] |
                select(.architecture == "amd64") |
          .digest'
      loop:
        - {
            namespace: minio,
            repository: minio
          }
        - {
            namespace: redis,
            repository: redis-stack-server
          }
        - {
            namespace: redislabs,
            repository: redisinsight
          }
        - {
            namespace: gitlab,
            repository: gitlab-ce
          }
        - {
            namespace: dpage,
            repository: pgadmin4
          }
        - {
            namespace: grafana,
            repository: grafana-oss
          }
      register: docker_image_digest
      changed_when: false

    - name: find fixed tag by digest
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.images[] |
              select(.digest == "{{ item.digest }}")) |
          .name | select(. | test("{{ item.filter }}"))'
      loop:
        - {
            namespace: minio,
            repository: minio,
            digest: "{{ docker_image_digest.results.0.stdout | replace('\"','') }}",
            # find tags which looks like:
            # RELEASE.2023-08-16T20-17-30Z
            # RELEASE.2022-01-27T03-53-02Z.hotfix.d5384ae51
            filter: '[A-Z]\\.[0-9]+-[0-9]+-[0-9A-Z]+-[0-9]+-[0-9A-Z]\\.?[a-z]?\\.?[0-9a-z]?'
          }
        - {
            namespace: redis,
            repository: redis-stack-server,
            digest: "{{ docker_image_digest.results.1.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.2.0-v6-x86_64
            filter: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]+-[0-9a-z_]'
          }
        - {
            namespace: redislabs,
            repository: redisinsight,
            digest: "{{ docker_image_digest.results.2.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 1.14.0
            filter: '[0-9]\\.[0-9]+\\.[0-9]'
          }
        - {
            namespace: gitlab,
            repository: gitlab-ce,
            digest: "{{ docker_image_digest.results.3.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 16.2.4-ce.0
            filter: '[0-9]\\.[0-9]\\.[0-9]-[a-z]+\\.[0-9]'
          }
        - {
            namespace: dpage,
            repository: pgadmin4,
            digest: "{{ docker_image_digest.results.4.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.5
            filter: '[0-9]\\.[0-9]'
          }
        - {
            namespace: grafana,
            repository: grafana-oss,
            digest: "{{ docker_image_digest.results.5.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 10.2.1
            filter: '[0-9]\\.[0-9]\\.[0-9]'
          }
      register: docker_image_tag_by_digest
      changed_when: false

    - name: find fixed tag by filter
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags?page_size=100 |
          jq '.results[] |
            select(.name | test("{{ item.filter }}")) |
            select(.name | test("{{ item.exclude }}") | not) |
              .name' | sort -V | tail -n 1
      loop:
        - {
            namespace: mattermost,
            repository: mattermost-team-edition,
            # find tags which looks like:
            # 9.1.1
            filter: '[0-9]\\.[0-9]\\.[0-9]',
            # exclude tags which looks like:
            # 8.1.4-rc2
            exclude: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]'
          }
      register: docker_image_tag_by_filter
      changed_when: false

    - name: set docker image
      ansible.builtin.set_fact:
        docker_image_tag_minio: "{{ docker_image_tag_by_digest.results.0.stdout | replace('\"','') }}"
        docker_image_tag_mattermost: "{{ docker_image_tag_by_filter.results.0.stdout | replace('\"','') }}"
        docker_image_tag_redis: "{{ docker_image_tag_by_digest.results.1.stdout | replace('\"','') }}"
        docker_image_tag_redisinsight: "{{ docker_image_tag_by_digest.results.2.stdout | replace('\"','') }}"
        docker_image_tag_gitlab: "{{ docker_image_tag_by_digest.results.3.stdout | replace('\"','') }}"
        docker_image_tag_pgadmin: "{{ docker_image_tag_by_digest.results.4.stdout | replace('\"','') }}"
        docker_image_tag_grafana: "{{ docker_image_tag_by_digest.results.5.stdout | replace('\"','') }}"

    #Â NOTE: File can be saved directly on server
    - name: update variables
      ansible.builtin.copy:
        content: |
          {
            one_password_max_delay = "{{ one_password_max_delay }}";

            sops_nix_commit_id = "{{ commit_id.results.0.stdout }}";
            sops_nix_commit_hash = "{{ sops_nix_commit_hash }}";

            docker_image_minio = "minio/minio:{{ docker_image_tag_minio }}";

            nginx_prometheus_exporter_tag = "{{ nginx_prometheus_exporter_tag }}";
            nginx_prometheus_exporter_release_hash = "{{ nginx_prometheus_exporter_release_hash.stdout }}";

            docker_image_mattermost = "mattermost/mattermost-team-edition:{{ docker_image_tag_mattermost }}";
            docker_image_redis = "redis/redis-stack-server:{{ docker_image_tag_redis }}";
            docker_image_redisinsight = "redislabs/redisinsight:{{ docker_image_tag_redisinsight }}";
            docker_image_gitlab = "gitlab/gitlab-ce:{{ docker_image_tag_gitlab }}";
            docker_image_pgadmin = "dpage/pgadmin4:{{ docker_image_tag_pgadmin }}";
            docker_image_grafana = "grafana/grafana-oss:{{ docker_image_tag_grafana }}";

            websockify_tag = "{{ websockify_tag }}";
            websockify_commit_id = "{{ commit_id.results.1.stdout }}";
            websockify_commit_hash = "{{ websockify_commit_hash }}";

            spice_web_client_commit_id = "{{ commit_id.results.2.stdout }}";
            spice_web_client_commit_hash = "{{ spice_web_client_commit_hash }}";
          }
        dest: ../configs/variables.nix
