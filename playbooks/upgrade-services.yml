---
- name: upgrade services
  hosts: localhost
  become: false
  gather_facts: false
  vars:
    docker_hub_repository_minio: minio/minio
    docker_hub_repository_mattermost: mattermost/mattermost-team-edition
    docker_hub_repository_redis: redis/redis-stack-server
    docker_hub_repository_redisinsight: redislabs/redisinsight
    docker_hub_repository_gitlab: gitlab/gitlab-ce
    docker_hub_repository_pgadmin: dpage/pgadmin4
    docker_hub_repository_grafana: grafana/grafana-oss
  tasks:

    # ------------------- sops-nix ------------------- #

    - name: find latest commit | sops-nix
      ansible.builtin.shell: |
        git ls-remote --exit-code https://github.com/Mic92/sops-nix.git HEAD |
          awk '{print $1}'
      register: github_sops_nix_commit
      changed_when: false

    - name: find sha256 of latest commit | sops-nix (1/2)
      ansible.builtin.command: |
        nix \
          --extra-experimental-features nix-command \
          shell -f '<nixpkgs>' nix-prefetch-github -c nix-prefetch-github \
          --json --rev {{ github_sops_nix_commit.stdout }} Mic92 sops-nix
      register: github_sops_nix_sha256_json
      delegate_to: server
      changed_when: false
      become: false

    - name: find sha256 of latest commit | sops-nix (2/2)
      ansible.builtin.set_fact:
        github_sops_nix_sha256: "{{ github_sops_nix_sha256_json.stdout |
                                    from_json |
                                    community.general.json_query('hash') |
                                    regex_replace('^sha256-(.*)$', '\\1')
                                }}"

    # ------------------- nginx-prometheus-exporter ------------------- #

    - name: find latest tag | nginx-prometheus-exporter
      ansible.builtin.shell: |
        git -c 'versionsort.suffix=-' ls-remote --tags --sort='-version:refname' --exit-code \
          https://github.com/nginxinc/nginx-prometheus-exporter.git 'v[0-9].[0-9][0-9].[0-9]' |
            head -n 1 |
            sed -E 's|.*refs/tags/(.+)|\1|' |
            sed 's|v||'
      register: github_nginx_exporter_tag
      changed_when: false

    - name: find sha256 of latest release | nginx-prometheus-exporter (1/2)
      ansible.builtin.command: |
        nix-prefetch-url \
          https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v{{ github_nginx_exporter_tag.stdout }}/nginx-prometheus-exporter_{{ github_nginx_exporter_tag.stdout }}_linux_amd64.tar.gz \
          --type sha256
      register: github_nginx_exporter_hash
      delegate_to: server
      changed_when: false
      become: false

    - name: find sha256 of latest release | nginx-prometheus-exporter (2/2)
      ansible.builtin.command: |
        nix \
          --extra-experimental-features nix-command \
          hash to-sri --type sha256 {{ github_nginx_exporter_hash.stdout }}
      register: github_nginx_exporter_sha256
      delegate_to: server
      changed_when: false
      become: false

    # ------------------- docker images ------------------- #

    - name: split docker repository name
      ansible.builtin.set_fact:
        docker_hub_repo_split_minio: "{{ docker_hub_repository_minio.split('/') }}"
        docker_hub_repo_split_mattermost: "{{ docker_hub_repository_mattermost.split('/') }}"
        docker_hub_repo_split_redis: "{{ docker_hub_repository_redis.split('/') }}"
        docker_hub_repo_split_redisinsight: "{{ docker_hub_repository_redisinsight.split('/') }}"
        docker_hub_repo_split_gitlab: "{{ docker_hub_repository_gitlab.split('/') }}"
        docker_hub_repo_split_pgadmin: "{{ docker_hub_repository_pgadmin.split('/') }}"
        docker_hub_repo_split_grafana: "{{ docker_hub_repository_grafana.split('/') }}"

    - name: find digest of latest docker image
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.name == "latest") |
              .images[] |
                select(.architecture == "amd64") |
          .digest'
      loop:
        - {
            namespace: '{{ docker_hub_repo_split_minio.0 }}',
            repository: '{{ docker_hub_repo_split_minio.1 }}'
          }
        - {
            namespace: '{{ docker_hub_repo_split_redis.0 }}',
            repository: '{{ docker_hub_repo_split_redis.1 }}'
          }
        - {
            namespace: '{{ docker_hub_repo_split_redisinsight.0 }}',
            repository: '{{ docker_hub_repo_split_redisinsight.1 }}'
          }
        - {
            namespace: '{{ docker_hub_repo_split_gitlab.0 }}',
            repository: '{{ docker_hub_repo_split_gitlab.1 }}'
          }
        - {
            namespace: '{{ docker_hub_repo_split_pgadmin.0 }}',
            repository: '{{ docker_hub_repo_split_pgadmin.1 }}'
          }
        - {
            namespace: '{{ docker_hub_repo_split_grafana.0 }}',
            repository: '{{ docker_hub_repo_split_grafana.1 }}'
          }
      register: docker_image_digest
      changed_when: false

    - name: find fixed tag by digest
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.images[] |
              select(.digest == "{{ item.digest }}")) |
          .name | select(. | test("{{ item.filter }}"))'
      loop:
        - {
            namespace: '{{ docker_hub_repo_split_minio.0 }}',
            repository: '{{ docker_hub_repo_split_minio.1 }}',
            digest: "{{ docker_image_digest.results.0.stdout | replace('\"','') }}",
            # find tags which looks like:
            # RELEASE.2023-08-16T20-17-30Z
            # RELEASE.2022-01-27T03-53-02Z.hotfix.d5384ae51
            filter: '[A-Z]\\.[0-9]+-[0-9]+-[0-9A-Z]+-[0-9]+-[0-9A-Z]\\.?[a-z]?\\.?[0-9a-z]?'
          }
        - {
            namespace: '{{ docker_hub_repo_split_redis.0 }}',
            repository: '{{ docker_hub_repo_split_redis.1 }}',
            digest: "{{ docker_image_digest.results.1.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.2.0-v6-x86_64
            filter: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]+-[0-9a-z_]'
          }
        - {
            namespace: '{{ docker_hub_repo_split_redisinsight.0 }}',
            repository: '{{ docker_hub_repo_split_redisinsight.1 }}',
            digest: "{{ docker_image_digest.results.2.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 1.14.0
            filter: '[0-9]\\.[0-9]+\\.[0-9]'
          }
        - {
            namespace: '{{ docker_hub_repo_split_gitlab.0 }}',
            repository: '{{ docker_hub_repo_split_gitlab.1 }}',
            digest: "{{ docker_image_digest.results.3.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 16.2.4-ce.0
            filter: '[0-9]\\.[0-9]\\.[0-9]-[a-z]+\\.[0-9]'
          }
        - {
            namespace: '{{ docker_hub_repo_split_pgadmin.0 }}',
            repository: '{{ docker_hub_repo_split_pgadmin.1 }}',
            digest: "{{ docker_image_digest.results.4.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.5
            filter: '[0-9]\\.[0-9]'
          }
        - {
            namespace: '{{ docker_hub_repo_split_grafana.0 }}',
            repository: '{{ docker_hub_repo_split_grafana.1 }}',
            digest: "{{ docker_image_digest.results.5.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 10.2.1
            filter: '[0-9]\\.[0-9]\\.[0-9]'
          }
      register: docker_image_tag_by_digest
      changed_when: false

    - name: find fixed tag by filter
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags?page_size=100 |
          jq '.results[] |
            select(.name | test("{{ item.filter }}")) |
            select(.name | test("{{ item.exclude }}") | not) |
              .name' | sort -V | tail -n 1
      loop:
        - {
            namespace: '{{ docker_hub_repo_split_mattermost.0 }}',
            repository: '{{ docker_hub_repo_split_mattermost.1 }}',
            # find tags which looks like:
            # 9.1.1
            filter: '[0-9]\\.[0-9]\\.[0-9]',
            # exclude tags which looks like:
            # 8.1.4-rc2
            exclude: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]'
          }
      register: docker_image_tag_by_filter
      changed_when: false

    - name: set docker image
      ansible.builtin.set_fact:
        docker_image_minio: "{{ docker_hub_repository_minio }}:{{ docker_image_tag_by_digest.results.0.stdout | replace('\"','') }}"
        docker_image_mattermost: "{{ docker_hub_repository_mattermost }}:{{ docker_image_tag_by_filter.results.0.stdout | replace('\"','') }}"
        docker_image_redis: "{{ docker_hub_repository_redis }}:{{ docker_image_tag_by_digest.results.1.stdout | replace('\"','') }}"
        docker_image_redisinsight: "{{ docker_hub_repository_redisinsight }}:{{ docker_image_tag_by_digest.results.2.stdout | replace('\"','') }}"
        docker_image_gitlab: "{{ docker_hub_repository_gitlab }}:{{ docker_image_tag_by_digest.results.3.stdout | replace('\"','') }}"
        docker_image_pgadmin: "{{ docker_hub_repository_pgadmin }}:{{ docker_image_tag_by_digest.results.4.stdout | replace('\"','') }}"
        docker_image_grafana: "{{ docker_hub_repository_grafana }}:{{ docker_image_tag_by_digest.results.5.stdout | replace('\"','') }}"

    #Â NOTE: File can be saved directly on server
    - name: update variables
      ansible.builtin.copy:
        content: |
          {
            one_password_max_delay = "";
            github_sops_nix_commit = "{{ github_sops_nix_commit.stdout }}";
            github_sops_nix_sha256 = "{{ github_sops_nix_sha256 }}";
            docker_image_minio = "{{ docker_image_minio }}";
            github_nginx_exporter_tag = "{{ github_nginx_exporter_tag.stdout }}";
            github_nginx_exporter_sha256 = "{{ github_nginx_exporter_sha256.stdout }}";
            docker_image_mattermost = "{{ docker_image_mattermost }}";
            docker_image_redis = "{{ docker_image_redis }}";
            docker_image_redisinsight = "{{ docker_image_redisinsight }}";
            docker_image_gitlab = "{{ docker_image_gitlab }}";
            docker_image_pgadmin = "{{ docker_image_pgadmin }}";
            docker_image_grafana = "{{ docker_image_grafana }}";
          }
        dest: ../configs/variables.nix
