---
- name: upgrade services
  hosts: localhost
  become: false
  gather_facts: false
  vars:
    minio_repository: minio/minio
    mattermost_repository: mattermost/mattermost-team-edition
    redis_repository: redis/redis-stack-server
    redisinsight_repository: redislabs/redisinsight
    gitlab_repository: gitlab/gitlab-ce
    pgadmin_repository: dpage/pgadmin4
  tasks:

    # ------------------- sops-nix ------------------- #

    - name: find the latest commit of the sops-nix repository
      ansible.builtin.shell: git ls-remote --exit-code https://github.com/Mic92/sops-nix.git HEAD | awk '{print $1}'
      register: sops_nix_commit
      changed_when: false

    - name: find the sha256 of the latest commit of the sops-nix repository (1/2)
      ansible.builtin.command: |
        nix \
          --extra-experimental-features nix-command \
          shell -f '<nixpkgs>' nix-prefetch-github -c nix-prefetch-github \
          --json --rev {{ sops_nix_commit.stdout }} Mic92 sops-nix
      register: sops_nix_sha256_json
      delegate_to: server
      changed_when: false
      become: false

    - name: find the sha256 of the latest commit of the sops-nix repository (2/2)
      ansible.builtin.set_fact:
        sops_nix_sha256: "{{ sops_nix_sha256_json.stdout | from_json }}"

    - name: configure hash of the github repository
      ansible.builtin.blockinfile:
        path: ../configs/configuration.nix
        insertafter: 'imports\s='
        block: |2
              let
                SOPS_NIX_COMMIT = "{{ sops_nix_commit.stdout }}";
                SOPS_NIX_SHA256 = "{{ sops_nix_sha256.sha256 }}";
              in
        marker: "    # {mark} ANSIBLE MANAGED BLOCK GITHUB HASH"

    # ------------------- docker images ------------------- #

    - name: split a docker repository name
      ansible.builtin.set_fact:
        minio_repo_split: "{{ minio_repository.split('/') }}"
        mattermost_repo_split: "{{ mattermost_repository.split('/') }}"
        redis_repo_split: "{{ redis_repository.split('/') }}"
        redisinsight_repo_split: "{{ redisinsight_repository.split('/') }}"
        gitlab_repo_split: "{{ gitlab_repository.split('/') }}"
        pgadmin_repo_split: "{{ pgadmin_repository.split('/') }}"

    - name: find digest of the latest docker image
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.name | contains ("latest")) |
              .images[] |
                select(.architecture | contains ("amd64")) |
          .digest'
      loop:
        - {
            namespace: '{{ minio_repo_split.0 }}',
            repository: '{{ minio_repo_split.1 }}'
          }
        - {
            namespace: '{{ redis_repo_split.0 }}',
            repository: '{{ redis_repo_split.1 }}'
          }
        - {
            namespace: '{{ redisinsight_repo_split.0 }}',
            repository: '{{ redisinsight_repo_split.1 }}'
          }
        - {
            namespace: '{{ gitlab_repo_split.0 }}',
            repository: '{{ gitlab_repo_split.1 }}'
          }
        - {
            namespace: '{{ pgadmin_repo_split.0 }}',
            repository: '{{ pgadmin_repo_split.1 }}'
          }
      register: docker_image_digest
      changed_when: false

    - name: find a fixed tag by digest
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.images[] |
              select(.digest == "{{ item.digest }}")) |
          .name | select(. | test("{{ item.filter }}"))'
      loop:
        - {
            namespace: '{{ minio_repo_split.0 }}',
            repository: '{{ minio_repo_split.1 }}',
            digest: "{{ docker_image_digest.results.0.stdout | replace('\"','') }}",
            # find tags which looks like:
            # RELEASE.2023-08-16T20-17-30Z
            # RELEASE.2022-01-27T03-53-02Z.hotfix.d5384ae51
            filter: '[A-Z]\\.[0-9]+-[0-9]+-[0-9A-Z]+-[0-9]+-[0-9A-Z]\\.?[a-z]?\\.?[0-9a-z]?'
          }
        - {
            namespace: '{{ redis_repo_split.0 }}',
            repository: '{{ redis_repo_split.1 }}',
            digest: "{{ docker_image_digest.results.1.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.2.0-v6-x86_64
            filter: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]+-[0-9a-z_]'
          }
        - {
            namespace: '{{ redisinsight_repo_split.0 }}',
            repository: '{{ redisinsight_repo_split.1 }}',
            digest: "{{ docker_image_digest.results.2.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 1.14.0
            filter: '[0-9]\\.[0-9]+\\.[0-9]'
          }
        - {
            namespace: '{{ gitlab_repo_split.0 }}',
            repository: '{{ gitlab_repo_split.1 }}',
            digest: "{{ docker_image_digest.results.3.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 16.2.4-ce.0
            filter: '[0-9]\\.[0-9]\\.[0-9]-[a-z]+\\.[0-9]'
          }
        - {
            namespace: '{{ pgadmin_repo_split.0 }}',
            repository: '{{ pgadmin_repo_split.1 }}',
            digest: "{{ docker_image_digest.results.4.stdout | replace('\"','') }}",
            # find tags which looks like:
            # 7.5
            filter: '[0-9]\\.[0-9]'
          }
      register: docker_image_tag_by_digest
      changed_when: false

    - name: find a fixed tag by filter
      ansible.builtin.shell: |
        curl --silent --request GET https://hub.docker.com/v2/namespaces/{{ item.namespace }}/repositories/{{ item.repository }}/tags |
          jq '.results[] |
            select(.name | test("{{ item.filter }}")) |
            select(.name | test("{{ item.exclude }}") | not) |
              .name' | sort -V | tail -n 1
      loop:
        - {
            namespace: '{{ mattermost_repo_split.0 }}',
            repository: '{{ mattermost_repo_split.1 }}',
            # find tags which looks like:
            # 9.1.1
            filter: '[0-9]\\.[0-9]\\.[0-9]',
            # exclude tags which looks like:
            # 8.1.4-rc2
            exclude: '[0-9]\\.[0-9]\\.[0-9]-[0-9a-z]'
          }
      register: docker_image_tag_by_filter
      changed_when: false

    - name: set a docker image
      ansible.builtin.set_fact:
        minio_image: "{{ minio_repository }}:{{ docker_image_tag_by_digest.results.0.stdout | replace('\"','') }}"
        mattermost_image: "{{ mattermost_repository }}:{{ docker_image_tag_by_filter.results.0.stdout | replace('\"','') }}"
        redis_image: "{{ redis_repository }}:{{ docker_image_tag_by_digest.results.1.stdout | replace('\"','') }}"
        redisinsight_image: "{{ redisinsight_repository }}:{{ docker_image_tag_by_digest.results.2.stdout | replace('\"','') }}"
        gitlab_image: "{{ gitlab_repository }}:{{ docker_image_tag_by_digest.results.3.stdout | replace('\"','') }}"
        pgadmin_image: "{{ pgadmin_repository }}:{{ docker_image_tag_by_digest.results.4.stdout | replace('\"','') }}"

    #Â NOTE: File can be saved directly on server
    - name: update variables
      ansible.builtin.copy:
        content: |
          {
            minio_image = "{{ minio_image }}";
            mattermost_image = "{{ mattermost_image }}";
            redis_image = "{{ redis_image }}";
            redisinsight_image = "{{ redisinsight_image }}";
            gitlab_image = "{{ gitlab_image }}";
            pgadmin_image = "{{ pgadmin_image }}";
          }
        dest: ../configs/variables.nix
