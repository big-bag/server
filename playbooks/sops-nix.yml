---
- name: create secrets
  hosts: localhost
  become: false
  gather_facts: false
  tasks:
    - name: convert user ssh key to an age key
      ansible.builtin.shell: ssh-to-age -private-key -i ../id_ed25519 > ../configs/key.txt
      args:
        creates: ../configs/key.txt

    - name: get user public key
      ansible.builtin.command: age-keygen -y ../configs/key.txt
      register: user_public_key
      changed_when: false

    - name: create a temporary file to write secrets
      ansible.builtin.tempfile:
        path: /tmp
        prefix: ansible.
        suffix: .yml
        state: file
      register: temp_file_secrets
      changed_when: false

    - name: create sops configuration file
      ansible.builtin.copy:
        content: |
          keys:
            - &user {{ user_public_key.stdout }}
          creation_rules:
            - path_regex: /tmp/ansible\.[^/]+\.yml$
              key_groups:
              - age:
                - *user
            - path_regex: configs/[^/]+\.yml$
              key_groups:
              - age:
                - *user
        dest: ../.sops.yaml

    - name: set seed variables
      ansible.builtin.set_fact:
        minio_application_username_seed: minio_application_username_random
        minio_application_password_seed: minio_application_password_random

        mimir_minio_access_key_seed: mimir_minio_access_key_random
        mimir_minio_secret_key_seed: mimir_minio_secret_key_random
        mimir_nginx_username_seed: mimir_nginx_username_random
        mimir_nginx_password_seed: mimir_nginx_password_random

        loki_minio_access_key_seed: loki_minio_access_key_random
        loki_minio_secret_key_seed: loki_minio_secret_key_random

        prometheus_nginx_username_seed: prometheus_nginx_username_random
        prometheus_nginx_password_seed: prometheus_nginx_password_random

        mattermost_postgres_password_seed: mattermost_postgres_password_random
        mattermost_minio_access_key_seed: mattermost_minio_access_key_random
        mattermost_minio_secret_key_seed: mattermost_minio_secret_key_random
        mattermost_application_username_seed: mattermost_application_username_random
        mattermost_application_password_seed: mattermost_application_password_random

        alertmanager_minio_access_key_seed: alertmanager_minio_access_key_random
        alertmanager_minio_secret_key_seed: alertmanager_minio_secret_key_random
        alertmanager_nginx_username_seed: alertmanager_nginx_username_random
        alertmanager_nginx_password_seed: alertmanager_nginx_password_random

        redis_default_user_password_seed: redis_default_user_password_random
        redis_exporter_redis_password_seed: redis_exporter_redis_password_random

        redisinsight_nginx_username_seed: redisinsight_nginx_username_random
        redisinsight_nginx_password_seed: redisinsight_nginx_password_random

        gitlab_minio_access_key_seed: gitlab_minio_access_key_random
        gitlab_minio_secret_key_seed: gitlab_minio_secret_key_random
        gitlab_postgres_password_seed: gitlab_postgres_password_random
        gitlab_application_password_seed: gitlab_application_password_random
        gitlab_application_token_seed: gitlab_application_token_random

        postgres_exporter_postgres_password_seed: postgres_exporter_postgres_password_random

        pgadmin_postgres_password_seed: pgadmin_postgres_password_random
        pgadmin_application_username_seed: pgadmin_application_username_random
        pgadmin_application_password_seed: pgadmin_application_password_random

        grafana_minio_access_key_seed: grafana_minio_access_key_random
        grafana_minio_secret_key_seed: grafana_minio_secret_key_random
        grafana_postgres_password_seed: grafana_postgres_password_random
        grafana_redis_password_seed: grafana_redis_password_random
        grafana_application_username_seed: grafana_application_username_random
        grafana_application_password_seed: grafana_application_password_random

        windows_nginx_username_seed: windows_nginx_username_random
        windows_nginx_password_seed: windows_nginx_password_random

    - name: create random but idempotent secrets
      ansible.builtin.set_fact:
        minio_application_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=minio_application_username_seed) }}"
        minio_application_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=minio_application_password_seed) }}"

        mimir_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=mimir_minio_access_key_seed) }}"
        mimir_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=mimir_minio_secret_key_seed) }}"
        mimir_nginx_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=mimir_nginx_username_seed) }}"
        mimir_nginx_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=mimir_nginx_password_seed) }}"

        loki_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=loki_minio_access_key_seed) }}"
        loki_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=loki_minio_secret_key_seed) }}"

        prometheus_nginx_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=prometheus_nginx_username_seed) }}"
        prometheus_nginx_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=prometheus_nginx_password_seed) }}"

        mattermost_postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~!@$%^&*()-_=+[]{}|;:,.<>/? length=48', seed=mattermost_postgres_password_seed) }}"
        mattermost_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=mattermost_minio_access_key_seed) }}"
        mattermost_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=mattermost_minio_secret_key_seed) }}"
        mattermost_application_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_lowercase,digits,-_. length=22', seed=mattermost_application_username_seed) }}"
        mattermost_application_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=mattermost_application_password_seed) }}"

        alertmanager_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=alertmanager_minio_access_key_seed) }}"
        alertmanager_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=alertmanager_minio_secret_key_seed) }}"
        alertmanager_nginx_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=alertmanager_nginx_username_seed) }}"
        alertmanager_nginx_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=alertmanager_nginx_password_seed) }}"

        redis_default_user_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~!@#$%^&*()-_=+[]{}|;:,.<>/? length=48', seed=redis_default_user_password_seed) }}"
        redis_exporter_redis_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,<>/? length=48', seed=redis_exporter_redis_password_seed) }}"

        redisinsight_nginx_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=redisinsight_nginx_username_seed) }}"
        redisinsight_nginx_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=redisinsight_nginx_password_seed) }}"

        gitlab_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=gitlab_minio_access_key_seed) }}"
        gitlab_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=gitlab_minio_secret_key_seed) }}"
        gitlab_postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~!@$%^&*()-_=+[]{}|;:,.<>/? length=48', seed=gitlab_postgres_password_seed) }}"
        gitlab_application_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=gitlab_application_password_seed) }}"
        gitlab_application_token: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=gitlab_application_token_seed) }}"

        postgres_exporter_postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~%^&*()-_=+[]{}|;,.<>/? length=48', seed=postgres_exporter_postgres_password_seed) }}"

        pgadmin_postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=pgadmin_postgres_password_seed) }}"
        pgadmin_application_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,-_. length=24', seed=pgadmin_application_username_seed) }}"
        pgadmin_application_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=pgadmin_application_password_seed) }}"

        grafana_minio_access_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=20', seed=grafana_minio_access_key_seed) }}"
        grafana_minio_secret_key: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits length=40', seed=grafana_minio_secret_key_seed) }}"
        grafana_postgres_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,~!@$%^&*()-_=+[]{}|;:,.<>/? length=48', seed=grafana_postgres_password_seed) }}"
        grafana_redis_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,<>/? length=48', seed=grafana_redis_password_seed) }}"
        grafana_application_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=grafana_application_username_seed) }}"
        grafana_application_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@$%^&*()-_=+[]{}|:,.<>/? length=48', seed=grafana_application_password_seed) }}"

        windows_nginx_username: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=24', seed=windows_nginx_username_seed) }}"
        windows_nginx_password: "{{ lookup('ansible.builtin.password', '/dev/null chars=ascii_letters,digits,`~!@#$%^&*()-_=+[]{}|;,.<>/? length=48', seed=windows_nginx_password_seed) }}"

    - name: create a temporary file to write basic auth credentials
      ansible.builtin.tempfile:
        path: /tmp
        prefix: basic_auth.
        suffix: .{{ item }}
        state: file
      loop:
        - mimir
        - prometheus
        - alertmanager
        - redisinsight
        - windows
      register: temp_file
      changed_when: false

    - name: add basic auth credentials to a temporary file
      community.general.htpasswd:
        path: "{{ item.file }}"
        name: "{{ item.username }}"
        password: "{{ item.password }}"
      loop:
        - {
            file: '{{ temp_file.results.0.path }}',
            username: '{{ mimir_nginx_username }}',
            password: '{{ mimir_nginx_password }}'
          }
        - {
            file: '{{ temp_file.results.1.path }}',
            username: '{{ prometheus_nginx_username }}',
            password: '{{ prometheus_nginx_password }}'
          }
        - {
            file: '{{ temp_file.results.2.path }}',
            username: '{{ alertmanager_nginx_username }}',
            password: '{{ alertmanager_nginx_password }}'
          }
        - {
            file: '{{ temp_file.results.3.path }}',
            username: '{{ redisinsight_nginx_username }}',
            password: '{{ redisinsight_nginx_password }}'
          }
        - {
            file: '{{ temp_file.results.4.path }}',
            username: '{{ windows_nginx_username }}',
            password: '{{ windows_nginx_password }}'
          }
      changed_when: false
      no_log: true

    - name: read basic auth credentials from a temporary file
      ansible.builtin.set_fact:
        basic_auth_mimir: "{{ lookup('ansible.builtin.file', '{{ temp_file.results.0.path }}') }}"
        basic_auth_prometheus: "{{ lookup('ansible.builtin.file', '{{ temp_file.results.1.path }}') }}"
        basic_auth_alertmanager: "{{ lookup('ansible.builtin.file', '{{ temp_file.results.2.path }}') }}"
        basic_auth_redisinsight: "{{ lookup('ansible.builtin.file', '{{ temp_file.results.3.path }}') }}"
        basic_auth_windows: "{{ lookup('ansible.builtin.file', '{{ temp_file.results.4.path }}') }}"

    - name: write secrets in plain text to a temporary file
      ansible.builtin.copy:
        content: |
          1password:
            application:
              envs: |
                OP_DEVICE={{ vault_1password_device_id }}
                OP_MASTER_PASSWORD={{ vault_1password_master_password }}
                OP_SUBDOMAIN={{ vault_1password_subdomain }}
                OP_EMAIL_ADDRESS={{ vault_1password_email_address }}
                OP_SECRET_KEY={{ vault_1password_secret_key }}
          telegram:
            application:
              envs: |
                TELEGRAM_BOT_TOKEN={{ vault_telegram_bot_token }}
                TELEGRAM_CHAT_ID={{ vault_telegram_chat_id }}
          minio:
            application:
              envs: |
                MINIO_ROOT_USER={{ minio_application_username }}
                MINIO_ROOT_PASSWORD={{ minio_application_password }}
          mimir:
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ mimir_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ mimir_minio_secret_key }}
            nginx:
              file:
                basic_auth: {{ basic_auth_mimir }}
              envs: |
                NGINX_USERNAME={{ mimir_nginx_username }}
                NGINX_PASSWORD={{ mimir_nginx_password }}
          loki:
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ loki_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ loki_minio_secret_key }}
          prometheus:
            nginx:
              file:
                basic_auth: {{ basic_auth_prometheus }}
              envs: |
                NGINX_USERNAME={{ prometheus_nginx_username }}
                NGINX_PASSWORD={{ prometheus_nginx_password }}
          mattermost:
            postgres:
              envs: |
                POSTGRESQL_USERNAME={{ vault_mattermost_postgres_username }}
                POSTGRESQL_PASSWORD_DATABASE={{ mattermost_postgres_password }}
                POSTGRESQL_PASSWORD_APPLICATION={{ mattermost_postgres_password | replace('%', '%25') | replace('`', '%60') | replace('!', '%21') | replace('@', '%40') | replace('#', '%23') | replace('$', '%24') | replace('^', '%5E') | replace('&', '%26') | replace('*', '%2A') | replace('(', '%28') | replace(')', '%29') | replace('=', '%3D') | replace('+', '%2B') | replace('[', '%5B') | replace(']', '%5D') | replace('{', '%7B') | replace('}', '%7D') | replace('|', '%7C') | replace(';', '%3B') | replace(',', '%2C') | replace('<', '%3C') | replace('>', '%3E') | replace('/', '%2F') | replace('?', '%3F') }}
                POSTGRESQL_DATABASE={{ vault_mattermost_postgres_database }}
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ mattermost_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ mattermost_minio_secret_key }}
            application:
              envs: |
                MATTERMOST_USERNAME={{ mattermost_application_username }}
                MATTERMOST_PASSWORD={{ mattermost_application_password }}
          alertmanager:
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ alertmanager_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ alertmanager_minio_secret_key }}
            nginx:
              file:
                basic_auth: {{ basic_auth_alertmanager }}
              envs: |
                NGINX_USERNAME={{ alertmanager_nginx_username }}
                NGINX_PASSWORD={{ alertmanager_nginx_password }}
          redis:
            application:
              envs: |
                DEFAULT_USER_PASSWORD={{ redis_default_user_password }}
              file:
                password: {{ redis_default_user_password }}
          redis_exporter:
            redis:
              envs: |
                REDIS_USERNAME={{ vault_redis_exporter_redis_username }}
                REDIS_PASSWORD_CLI={{ redis_exporter_redis_password }}
                REDIS_PASSWORD_1PASSWORD={{ redis_exporter_redis_password | replace('%', '%25') | replace('`', '%60') | replace('!', '%21') | replace('@', '%40') | replace('#', '%23') | replace('$', '%24') | replace('^', '%5E') | replace('&', '%26') | replace('*', '%2A') | replace('(', '%28') | replace(')', '%29') | replace('=', '%3D') | replace('+', '%2B') | replace('[', '%5B') | replace(']', '%5D') | replace('{', '%7B') | replace('}', '%7D') | replace('|', '%7C') | replace(';', '%3B') | replace(',', '%2C') | replace('<', '%3C') | replace('>', '%3E') | replace('/', '%2F') | replace('?', '%3F') }}
              file:
                username: {{ vault_redis_exporter_redis_username }}
                password: '{{ redis_exporter_redis_password }}'
          redisinsight:
            nginx:
              file:
                basic_auth: {{ basic_auth_redisinsight }}
              envs: |
                NGINX_USERNAME={{ redisinsight_nginx_username }}
                NGINX_PASSWORD={{ redisinsight_nginx_password }}
          gitlab:
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ gitlab_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ gitlab_minio_secret_key }}
              file:
                access_key: {{ gitlab_minio_access_key }}
                secret_key: {{ gitlab_minio_secret_key }}
            postgres:
              envs: |
                POSTGRESQL_USERNAME={{ vault_gitlab_postgres_username }}
                POSTGRESQL_PASSWORD={{ gitlab_postgres_password }}
                POSTGRESQL_DATABASE={{ vault_gitlab_postgres_database }}
              file:
                username: {{ vault_gitlab_postgres_username }}
                password: '{{ gitlab_postgres_password }}'
                database: {{ vault_gitlab_postgres_database }}
            application:
              file:
                password: '{{ gitlab_application_password }}'
                token: '{{ gitlab_application_token }}'
              envs: |
                GITLAB_PASSWORD={{ gitlab_application_password }}
          postgres_exporter:
            postgres:
              envs: |
                POSTGRESQL_USERNAME={{ vault_postgres_exporter_postgres_username }}
                POSTGRESQL_PASSWORD={{ postgres_exporter_postgres_password }}
              file:
                username: {{ vault_postgres_exporter_postgres_username }}
                password: {{ postgres_exporter_postgres_password | replace('%', '%25') | replace('`', '%60') | replace('!', '%21') | replace('@', '%40') | replace('#', '%23') | replace('$', '%24') | replace('^', '%5E') | replace('&', '%26') | replace('*', '%2A') | replace('(', '%28') | replace(')', '%29') | replace('=', '%3D') | replace('+', '%2B') | replace('[', '%5B') | replace(']', '%5D') | replace('{', '%7B') | replace('}', '%7D') | replace('|', '%7C') | replace(';', '%3B') | replace(',', '%2C') | replace('<', '%3C') | replace('>', '%3E') | replace('/', '%2F') | replace('?', '%3F') }}
          pgadmin:
            postgres:
              envs: |
                POSTGRESQL_USERNAME={{ vault_pgadmin_postgres_username }}
                POSTGRESQL_PASSWORD={{ pgadmin_postgres_password }}
            application:
              envs: |
                PGADMIN_DEFAULT_EMAIL={{ pgadmin_application_username }}@{{ vault_domain_name_internal }}
                PGADMIN_DEFAULT_PASSWORD={{ pgadmin_application_password }}
          grafana:
            github:
              envs: |
                GITHUB_TOKEN={{ vault_grafana_github_token }}
            minio:
              envs: |
                MINIO_SERVICE_ACCOUNT_ACCESS_KEY={{ grafana_minio_access_key }}
                MINIO_SERVICE_ACCOUNT_SECRET_KEY={{ grafana_minio_secret_key }}
            postgres:
              envs: |
                POSTGRESQL_USERNAME={{ vault_grafana_postgres_username }}
                POSTGRESQL_PASSWORD={{ grafana_postgres_password }}
            redis:
              envs: |
                REDIS_USERNAME={{ vault_grafana_redis_username }}
                REDIS_PASSWORD_CLI={{ grafana_redis_password }}
                REDIS_PASSWORD_1PASSWORD={{ grafana_redis_password | replace('%', '%25') | replace('`', '%60') | replace('!', '%21') | replace('@', '%40') | replace('#', '%23') | replace('$', '%24') | replace('^', '%5E') | replace('&', '%26') | replace('*', '%2A') | replace('(', '%28') | replace(')', '%29') | replace('=', '%3D') | replace('+', '%2B') | replace('[', '%5B') | replace(']', '%5D') | replace('{', '%7B') | replace('}', '%7D') | replace('|', '%7C') | replace(';', '%3B') | replace(',', '%2C') | replace('<', '%3C') | replace('>', '%3E') | replace('/', '%2F') | replace('?', '%3F') }}
            application:
              envs: |
                USERNAME={{ grafana_application_username }}
                PASSWORD={{ grafana_application_password }}
                POSTGRESQL_DATABASE_MATTERMOST={{ vault_mattermost_postgres_database }}
                POSTGRESQL_DATABASE_GITLAB={{ vault_gitlab_postgres_database }}
          windows:
            nginx:
              file:
                basic_auth: {{ basic_auth_windows }}
              envs: |
                NGINX_USERNAME={{ windows_nginx_username }}
                NGINX_PASSWORD={{ windows_nginx_password }}
        dest: "{{ temp_file_secrets.path }}"
      changed_when: false

    - name: encrypt a temporary file
      ansible.builtin.shell: sops -e {{ temp_file_secrets.path }} > ../configs/secrets.yml
      changed_when: false
